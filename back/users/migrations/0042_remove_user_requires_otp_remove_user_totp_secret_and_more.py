# Generated by Django 5.2.6 on 2025-09-13 19:23

from allauth.account.models import EmailAddress
from django.conf import settings
from django.contrib.auth import get_user_model
from django.db import migrations

if settings.ALLOW_LOGIN_WITH_CREDENTIALS:
    from allauth.mfa.models import Authenticator
    from allauth.mfa.utils import encrypt
else:
    Authenticator = None

    def encrypt(_):
        pass


class Migration(migrations.Migration):
    def move_to_allauth(apps, schema_editor):
        User = apps.get_model("users", "User")

        # verify all emails
        EmailAddress.objects.bulk_create(
            [
                EmailAddress(user=user, email=user.email, verified=True, primary=True)
                for user in get_user_model().objects.all()
            ]
        )

        if Authenticator is None:
            return

        # move 2fa to allauth
        authenticators = []
        for user in User.objects.filter(requires_otp=True):
            authenticators.append(
                Authenticator(
                    user_id=user.id,
                    type=Authenticator.Type.TOTP,
                    data={"secret": encrypt(user.totp_secret)},
                )
            )
            otp_keys = user.user_otp.filter(is_used=False).values_list("key", flat=True)
            authenticators.append(
                Authenticator(
                    user_id=user.id,
                    type=Authenticator.Type.RECOVERY_CODES,
                    data={
                        "seed": encrypt(user.totp_secret),
                        "used_mask": 0,
                        "migrated_codes": [encrypt(key) for key in otp_keys],
                    },
                )
            )
        Authenticator.objects.bulk_create(authenticators)

    dependencies = [
        ("users", "0041_alter_user_timezone"),
    ]

    operations = [
        migrations.RunPython(move_to_allauth, reverse_code=migrations.RunPython.noop),
        migrations.RemoveField(
            model_name="user",
            name="requires_otp",
        ),
        migrations.RemoveField(
            model_name="user",
            name="totp_secret",
        ),
        migrations.DeleteModel(
            name="OTPRecoveryKey",
        ),
    ]
